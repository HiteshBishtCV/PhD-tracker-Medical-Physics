name: Daily PhD Opportunities Scraper

on:
  schedule:
    - cron: '0 6 * * *'
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'scraping/**'
      - '.github/workflows/daily-scrape.yml'

jobs:
  scrape-opportunities:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('scraping/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r scraping/requirements.txt
        
    - name: Create data directory
      run: |
        mkdir -p data/archive
        
    - name: Initialize sources file if not exists
      run: |
        if [ ! -f data/sources.json ]; then
          echo '[]' > data/sources.json
        fi
        
    - name: Run scraper
      run: |
        cd scraping
        python scraper.py --config ../data/sources.json --output ../data/opportunities.json
        
    - name: Check for changes
      id: git-check
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        if git diff --quiet; then
          echo "changes=false" >> $GITHUB_OUTPUT
        else
          echo "changes=true" >> $GITHUB_OUTPUT
        fi
        
    - name: Commit and push changes
      if: steps.git-check.outputs.changes == 'true'
      run: |
        git add data/
        git commit -m "ðŸ¤– Update PhD opportunities - $(date +'%Y-%m-%d %H:%M:%S UTC')"
        git push

  deploy-to-github-pages:
    needs: scrape-opportunities
    if: always()
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
      
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: main
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      
    - name: Upload to GitHub Pages
      uses: actions/upload-pages-artifact@v3
      with:
        path: '.'
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v3
